{"ast":null,"code":"var _jsxFileName = \"/home/Andrei-Bacalu/mycourses/Amplify-Cognito-CICD-GitHub/my-quiz-app/src/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport quizData from './quizData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [isCorrect, setIsCorrect] = useState(null);\n  const handleAnswerOptionClick = option => {\n    const correctAnswer = quizData[currentQuestion].answer;\n    setSelectedAnswer(option);\n    if (option === correctAnswer) {\n      setScore(score + 1);\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n\n    // Delay moving to the next question to allow the user to see feedback\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < quizData.length) {\n        setCurrentQuestion(nextQuestion);\n        setIsCorrect(null); // Reset for the next question\n        setSelectedAnswer(\"\"); // Reset selected answer\n      } else {\n        setShowScore(true);\n      }\n    }, 1000); // Adjust time as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", quizData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), \"/\", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: quizData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: quizData[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option),\n          style: {\n            backgroundColor: selectedAnswer === option ? isCorrect ? 'lightgreen' : 'pink' : ''\n          },\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), selectedAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: isCorrect ? 'Correct! ðŸŽ‰' : 'Sorry, thatâ€™s not right. ðŸ˜¢'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"k/dZnU38U/4c3wIO5KeALjF8458=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","handleAnswerOptionClick","option","correctAnswer","answer","setTimeout","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","onClick","style","backgroundColor","marginTop","_c","$RefreshReg$"],"sources":["/home/Andrei-Bacalu/mycourses/Amplify-Cognito-CICD-GitHub/my-quiz-app/src/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport quizData from './quizData';\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\"); \r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  const handleAnswerOptionClick = (option) => {\r\n    const correctAnswer = quizData[currentQuestion].answer;\r\n    setSelectedAnswer(option);\r\n    if (option === correctAnswer) {\r\n      setScore(score + 1);\r\n      setIsCorrect(true);\r\n    } else {\r\n      setIsCorrect(false);\r\n    }\r\n\r\n    // Delay moving to the next question to allow the user to see feedback\r\n    setTimeout(() => {\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < quizData.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n        setIsCorrect(null); // Reset for the next question\r\n        setSelectedAnswer(\"\"); // Reset selected answer\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    }, 1000); // Adjust time as needed\r\n  };\r\n\r\n  return (\r\n    <div className='quiz'>\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {quizData.length}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestion + 1}</span>/{quizData.length}\r\n            </div>\r\n            <div className='question-text'>{quizData[currentQuestion].question}</div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {quizData[currentQuestion].options.map((option) => (\r\n              <button \r\n                onClick={() => handleAnswerOptionClick(option)} \r\n                key={option}\r\n                style={{ backgroundColor: selectedAnswer === option ? (isCorrect ? 'lightgreen' : 'pink') : '' }}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          {selectedAnswer && (\r\n            <div style={{ marginTop: '10px' }}>\r\n              {isCorrect ? 'Correct! ðŸŽ‰' : 'Sorry, thatâ€™s not right. ðŸ˜¢'}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}